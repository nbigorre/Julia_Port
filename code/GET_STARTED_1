+ JBG. V0.5, 03/05/2013. 
+****************************************************************************************************************************************************
+       HEADSTART
+----------------------------

Here is the minimal set of actions required prior to starting using psom.

* step 1: Select the compiler you want to use. To do that, please edit the ./optfile to set the compiler you will use:       fcomp=...  (ifort, pgf95 etc.)

* step 2: By default, psom will produce both binary files and netcdf files. If you do not have netcdf library installed or smply do not want to use netcdf files, 

    - edit the file ./model/inc/cppdef.jl and set the output_netcdf variable to false: 
            global const file_output_cdf = true     -by default
            global const file_output_cdf = false    -if you do not want to use netcdf.

   This will disable the netcdf output. The interpreter will only produce binary files.

Once you have done that, you simply follow the "compile, run" sequence:

* step 3: Compile.

    sh tools/compile_julia.sh

* step 4: Run.

    ./exe/julia_launch.sh nh ./namelist.yml


+****************************************************************************************************************************************************
+      TESTCASES
+----------------------------


The default run is trivial, because the initial state is no-motion and has only a stratification in s and T.
In order to make simple tests, psom comes with three experiments that you can easily try on your machine:
- wiggle      : This is a testcase with a wiggling front over a flat topography.  
- (TODO) NA          : This is a much more complex simulation of three fronts that go unstable. This casse has particles and tracers for biology.
- (TODO) shelfbreak  : Simulation of the Middle Atlantic Bight shelfbreak with a shelf front and a shelfbreak font. The topography includes a sharp slope at the break. It shows how to use the "user" namelist. 

To try these simulations (for example wiggle), you simply have to do:

* sh tools/clean.sh
* sh tools/compile_julia.sh wiggle
* edit ./code/wiggle/namelist_wiggle.yml so that the output directory exists
* ./exe/julia_launch nh_wiggle wiggle/namelist_wiggle.yml

To know more about this process, read GET_STARTED_2.


+****************************************************************************************************************************************************
+  ADDITIONAL INFORMATION
+----------------------------

Some explanations:


* Step 3 will 
    - merge files from the selected experiment folder with the default model
    - create a directory containing the built source code in code/exe/nh_(experiment name)

* Step 4 will start and run the model.
  By default, the namelist file contains the values of key parameters of the model, that you are likely willing to change. You can of course edit namelist to your convenience and repeat step 4.
  By default, messages will appear on the screen and the output files will go to ../output/.


========================================================================================

The next step is to make your own simulations. To do that, please refer to GET_STARTED_2.



